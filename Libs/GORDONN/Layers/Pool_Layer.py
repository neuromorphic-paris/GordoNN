#!/usr/bin/env python3
# -*- coding: utf-8 -*-
"""
Created on Wed Mar 23 09:03:43 2022

@author: marcorax93
"""

import numpy as np
import time,copy
from joblib import Parallel, delayed 
from sklearn.cluster import  MiniBatchKMeans
import copy

class Pool_Layer:
    """
    Local Layer for GORDONN architecture, used to subsample channels of the 
    dataset to allow for better generalization over pitch shifts in user.
    It works by taking channel indexes and floor dividing it //sub_factor.
    Please note that if channel number is not dividable by sub_factor, the last
    channel will pool less indeces that other pool channels.
    
    Local Layer constructor arguments: 
        
    n_input_channels (int): the total number of channels or polarities of the 
                           previous layer.      
                           
    pool_factor (int) : how many channels will now be considered a single channel,
                       if 2, a 32 channel input will now be considered a 16 channel
                       one.

    """
    def __init__(self, n_input_channels, pool_factor):
        
        self.n_input_channels = n_input_channels
        self.pool_factor = pool_factor
        self.n_output_channels = n_input_channels//pool_factor

        
    def pool(self, layer_dataset):
        """
        Method to pool channel info from a dataset
        
        Arguments: 
             layer_dataset: list of individual event based recoriding as
                            generated by the cochlea
        """
        
        pool_response = copy.deepcopy(layer_dataset)
        p_f = self.pool_factor
        
        for recording in range(len(layer_dataset)):
            pool_response[recording][1] =  pool_response[recording][1]//p_f
            
        return pool_response
    